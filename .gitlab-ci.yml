stages:
  - test
  - release

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
#image: python:3.9.5
#image: jupyter/base-notebook:python-3.9.2
image: axlit/edgebox:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V  # Print out python version for debugging
  - pip install -r requirements.txt
  #- pip install virtualenv
  #- virtualenv venv
  #- source venv/bin/activate

test:
  stage: test
  script:
#    - python setup.py test
    - python -m unittest
#    - pip install tox flake8  # you can also use tox
#    - tox -e py36,flake8

release:
  stage: release
  only:
    - tags
  script:
    - pip install twine
    - python setup.py sdist bdist_wheel
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
    - rm $HOME/.pypirc
    - TWINE_PASSWORD=${PYPI_PASSWORD} TWINE_USERNAME=${PYPI_USERNAME} python -m twine upload dist/* --verbose
  artifacts:
    paths:
      - dist/*.whl

#pages:
#  script:
#    - pip install sphinx sphinx-rtd-theme
#    - cd doc ; make html
#    - mv build/html/ ../public/
#  artifacts:
#    paths:
#      - public
#  rules:
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

