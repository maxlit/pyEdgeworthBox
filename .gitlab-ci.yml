stages:
  - test
  - build
  - release

image: python:3.11

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  CURRENT_TIMESTAMP: $(date +"%Y%m%d%H%M")

cache:
  key: "poetry-${CI_PIPELINE_CREATED_AT}"
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V  # Print out python version for debugging
  - pip install poetry==1.4.2  # Install Poetry
  - poetry install --no-root

test:
  stage: test
  script:
    - poetry run python -m unittest

build:
  stage: build
  script:
    - chmod +x build.sh  # Ensure the script is executable
    - ./build.sh  # Run the build script

release:
  stage: release
  only:
    - tags
  script:
    - pip install twine
    - poetry run python setup.py sdist bdist_wheel
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
    - TWINE_PASSWORD=${PYPI_PASSWORD} TWINE_USERNAME=${PYPI_USERNAME} python -m twine upload --repository pypi dist/* --verbose
    - docker build -t $DOCKER_HUB_USERNAME/edgebox:${CI_COMMIT_TAG} .
    # Log in to Docker Hub
    - echo $DOCKER_HUB_ACCESS_TOKEN | docker login -u $DOCKER_HUB_USERNAME --password-stdin
    # Push the Docker Image
    - docker push $DOCKER_HUB_USERNAME/edgebox:${CI_COMMIT_TAG}
  artifacts:
    paths:
      - dist/*.whl
